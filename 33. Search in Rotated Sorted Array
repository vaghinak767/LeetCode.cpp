class Solution {
private:
    int bs(std::vector<int>& arr, int l, int r, int target)
    {
        while(l <= r)
        {
            int mid = l + (r - l) / 2;
            if(arr[mid] == target)
                return mid;
            if(arr[mid] > target)
            {
                r = mid - 1;
            }
            if(arr[mid] < target)
            {
                l = mid + 1;
            }
        }
        return -1;
    }
public:
    int search(vector<int>& arr, int target) 
    {
        int l = 0, r = arr.size() - 1;
        while(l <= r)
        {
            if(arr[l] < arr[r])
                return bs(arr, l, r, target);
            int mid = l + (r - l) / 2;
            if(arr[mid] == target) 
                return mid;
            if(arr[mid] >= arr[l])
            {
                if(arr[mid] < target || arr[l] > target)
                    l = mid + 1;
                else 
                    r = mid - 1;
            }
            else
            {
                if(arr[mid] > target || arr[r] < target)
                    r = mid - 1;
                else 
                    l = mid + 1;
            }
        }
        return -1;
    }
};
